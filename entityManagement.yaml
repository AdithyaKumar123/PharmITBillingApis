openapi: 3.0.1
info:
  title: Entity Management
  description: This is a sample server entity management.
  termsOfService: http://swagger.io/terms/
  contact:
    email: team@pharmIT.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about pharmit
  url: http://pharmit.in
servers:
- url: https://localhost:3000/v1
- url: http://localhost:30000/v1
tags:
- name: entity
  description: Entity - Registration API
- name: user
  description: User - Registration API
- name: role
  description: Role - Registration API
- name: route
  description: Route -  API
- name: customergroup
  description: customer group  API
- name: dayend
  description: day end  API
- name: financialyear
  description: financial year  API
- name: region
  description: region master  API
- name: rule
  description: rule master  API
- name: series
  description: series master  API
- name: servicetype
  description: servicetype  API
- name: tax
  description: Tax API
- name: terms and conditions
  description: Terms and conditions API
- name: territory
  description: Territory API

paths:
  /Entity/createEntity:
    post:
      tags:
      - entity
      summary: create an Entity
      description: create a new entity.
      operationId: createEntity
      parameters:
      - name: entityName
        in: query
        required: true
        schema:
          type: string
      - name: entityTypeId
        in: query
        required: true
        schema:
          type: integer
      - name: addressLine1
        in: query
        required: true
        schema:
          type: string
      - name: addressLine2
        in: query
        required: true
        schema:
          type: string
      - name: countryId
        in: query
        required: true
        schema:
          type: integer
      - name: stateId
        in: query
        required: true
        schema:
          type: integer
      - name: cityId
        in: query
        required: true
        schema:
          type: integer
      - name: pinCode
        in: query
        required: true
        schema:
          type: integer
      - name: mobileNumber
        in: query
        required: true
        schema:
          type: integer
      - name: pan
        in: query
        required: true
        schema:
          type: string
      - name: Affiliate
        description: mandatory only for distributor and cnf
        in: query
        required: true
        schema:
          type: string
      requestBody:
        description: Creates entity object
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/entity'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'
              
  /Entity/updateEntity/{entityId}:
    put:
      tags:
      - entity
      summary: update an entity
      operationId: update an entity
      parameters:
      - name: entityId
        in: query
        description: entity id
        required: true
        schema:
          type: integer
      requestBody:
        description: List of user object
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/entity_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'
  /Entity/listAllEntity:
    get:
      tags:
      - entity
      summary: Lists all the entities
      operationId: listAllEntity
      responses:
        200:
          description: success
  /Entity/listEntityById/{Id}:
    get:
      tags:
      - entity
      summary: Lists entity by Id
      operationId: listEntityById
      parameters:
      - name: Id
        in: path
        description: entity id
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid id supplied
          content: {}
  /Entity/listEntityByType/{entityTypeId}:
    get:
      tags:
      - entity
      summary: Lists entity by Type
      operationId: listEntityByType
      parameters:
      - name: entityTypeId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid entityTypeId supplied
          content: {}
  /Entity/createUser:
    post:
      tags:
      - user
      summary: create user
      description: This can only be done by the logged in user.
      operationId: createUser
      parameters:
      - name: userName
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Created user object
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/user'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'
  /Entity/updateUser:
    put:
      tags:
      - user
      summary: update user 
      operationId: updateUser
      requestBody:
        description: List of user object
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/user_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'
  /Entity/listAllUser:
    get:
      tags:
      - user
      summary: list all users
      operationId: listAllUser
      responses:
        200:
          description: success
  /Entity/listUserByDivision/{divisionId}:
    get:
      tags:
      - user
      summary: Lists user by divisionId
      operationId: listUserByDivision
      parameters:
      - name: divisionId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
         description: success
  /Entity/listUserById{Id}:
    get:
      tags:
      - user
      summary: list user by Id
      operationId: listUserById
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid userId supplied
          content: {}
  /Entity/createRole:
    post:
      tags:
      - role
      summary: Create role
      description: Roles
      operationId: createRole
      parameters:
      - name: roleName
        in: path
        description: roleName of the user
        required: true
        schema:
          type: string
      requestBody:
        description: Creates role
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/role'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'
  /Entity/updateRole/{Id}:
    put:
      tags:
      - role
      summary: update a role
      operationId: updateRole
      parameters:
      - name: Id
        in: path
        description: roleId of the user
        required: true
        schema:
          type: string
      requestBody:
        description: updates a role object
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/role_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/listAllRoles/{entityId}:
    get:
      tags:
      - role
      summary: Creates a list of roles 
      operationId: listAllRoles
      parameters:
      - name: entityId
        in: path
        description: entityId of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
          
  /Entity/listRoleById/{Id}:
    get:
      tags:
      - role
      summary: Lists roles by Id
      operationId: listRoleById
      parameters:
      - name: Id
        in: path
        description: roleId of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid RoleId supplied
  /Entity/createRoute:
    post:
      tags:
      - route
      summary: Create route
      description: create a new route.
      operationId: createRoute
      parameters:
      - name: routeName
        in: query
        required: true
        schema:
          type: string
      - name: city
        in: query
        required: true
        schema:
          type: string
      - name: state
        in: query
        required: true
        schema:
          type: string
      - name: country
        in: query
        required: true
        schema:
          type: string
      requestBody:
        description: Creates entity object
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/route_register'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'
  /Entity/updateRoute/{Id}:
    put:
      tags:
      - route
      summary: Update a route
      operationId: updateRoute
      parameters:
      - name: Id
        in: query
        required: true
        schema:
          type: integer
      requestBody:
        description: List of route object
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/route_register_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'
  /Entity/listAllRoute/{entityId}:
    get:
      tags:
      - route
      summary: Lists all the routes
      operationId: listAllRoute
      parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: success  
  /Entity/listRouteById/{Id}:
    get:
      tags:
      - route
      summary: Lists route by Id
      operationId: listRouteById
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid routeId supplied
          content: {}

  /Entity/createCustomerGroup:
    post:
      tags:
      - customergroup
      summary: create a customer group
      operationId: createCustomerGroup
      parameters:
      - name: customerGroupName
        in: path
        description: customerGroupName of the user
        required: true
        schema:
          type: string
      - name: shortName
        in: path
        description: shortName of the user
        required: true
        schema:
          type: string
      requestBody:
        description: Creates customer group
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/customer_group_register'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/updateCustomerGroup/{Id}:
    put:
      tags:
      - customergroup
      summary: update a customer group
      operationId: updateCustomerGroup
      parameters:
      - name: Id
        in: query
        required: true
        schema:
          type: integer
      requestBody:
        description: updates a customer group object
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/customer_group_register_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/listAllcustomerGroups{entityId}:
    get:
      tags:
      - customergroup
      summary: create a list of customer groups 
      operationId: listAllcustomerGroups
      parameters:
      - name: Id
        in: query
        required: true
        schema:
          type: integer
      responses:
        200:
          description: success
  /Entity/listcustomerGroupById{entityId}:
    get:
      tags:
      - customergroup
      summary: list customer groups by Id
      operationId: listcustomerGroupsById
      
      responses:
        200:
          description: success
        400:
          description: Invalid RoleId supplied
  /Entity/createDayEnd:
    post:
      tags:
      - dayend
      summary: create a dayend 
      description: day end entry
      operationId: createDayEnd
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: integer
      - name: status
        in: query
        required: true
        schema:
          type: integer
      - name: endTime
        in: query
        required: true
        schema:
          type: integer
      requestBody:
        description: Creates a day end
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/day_end_master'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/updateDayEnd/{Id}:
    put:
      tags:
      - dayend
      summary: update a day end 
      operationId: updateDayEnd
      parameters:
      - name: Id
        in: query
        required: true
        schema:
          type: integer
      requestBody:
        description: updates a day end
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/day_end_master_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/listAllDayEnd{entityId}:
    get:
      tags:
      - dayend
      summary: list of dayend
      operationId: listAllDayEnd
      parameters:
      - name: entityId
        in: path
        description: entityId of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success    
  /Entity/listDayEndById{dId}:
    get:
      tags:
      - dayend
      summary: list day end  by Id
      operationId: listDayEndById
      parameters:
      - name: Id
        in: path
        description: dayEndId of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid RoleId supplied

  /Entity/createFinancialYear:
    post:
      tags:
      - financialyear
      summary: create a financialYear 
      description: financial year entry
      operationId: createFinancialYear
      parameters:
      - name: financialYearName
        in: query
        required: true
        schema:
          type: integer
      - name: shortName
        in: query
        required: true
        schema:
          type: integer
      - name: startDate
        in: query
        required: true
        schema:
          type: integer
      - name: endDate
        in: query
        required: true
        schema:
          type: integer
      requestBody:
        description: Creates a financial year
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/financial_year_master'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/updateFinancialYear/{Id}:
    put:
      tags:
      - financialyear
      summary: update a financial year
      operationId: updateFinancialYear
      parameters:
      - name: Id
        in: query
        required: true
        schema:
          type: integer
      requestBody:
        description: updates a financial year
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/financial_year_master_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/listAllFinancialYear{entityId}:
    get:
      tags:
      - financialyear
      summary: create a list of financial years
      operationId: listAllFinancialYear
      parameters:
      - name: entityId
        in: path
        description: entityId of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success   
  /Entity/listFinancialYearById{Id}:
    get:
      tags:
      - financialyear
      summary: list financial year  by Id
      operationId: listFinancialYearById
      parameters:
      - name: Id
        in: path
        description: Id of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid Id supplied

  /Entity/createRegionMaster:
    post:
      tags:
      - region
      summary: create a region 
      description: region entry
      operationId: createRegionMaster
      parameters:
      - name: regionName
        in: path
        description: regionName of the user
        required: true
        schema:
          type: string
      - name: shortName
        in: path
        description: regionName of the user
        required: true
        schema:
          type: string
      requestBody:
        description: Creates a financial year
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/region_register'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'
  /Entity/updateRegionMaster/{Id}:
    put:
      tags:
      - region
      summary: update a region
      operationId: updateRegionMaster
      parameters:
      - name: Id
        in: path
        description: id of the user
        required: true
        schema:
          type: string
      requestBody:
        description: updates a region
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/region_register_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/listAllRegions{entityId}:
    get:
      tags:
      - region
      summary: create a list of regions
      operationId: listAllRegions
      parameters:
      - name: entityId
        in: path
        description: entityId of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success   
  /Entity/listAllRegionById{Id}:
    get:
      tags:
      - region
      summary: list region by Id
      operationId: listAllRegionById
      parameters:
      - name: Id
        in: path
        description: Id of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid Id supplied
  /Entity/createRule:
    post:
      tags:
      - rule
      summary: create a rule 
      description: rule entry
      operationId: createRuleMaster
      requestBody:
        description: Creates a rule
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/rule_master'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/updateRule/{Id}:
    put:
      tags:
      - rule
      summary: update a rule
      operationId: updateRuleMaster
      parameters:
      - name: Id
        in: path
        description: ruleId of the user
        required: true
        schema:
          type: string
      requestBody:
        description: updates a rule
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/rule_master_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/listAllRules{entityId}:
    get:
      tags:
      - rule
      summary: create a list of rules
      operationId: listAllRules
      parameters:
      - name: entityId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: success   
  /Entity/listAllRulesById{Id}:
    get:
      tags:
      - rule
      summary: list rule by Id
      operationId: listAllRulesById
      parameters:
      - name: Id
        in: path
        description: Id of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid Id supplied
  /Entity/createSeries:
    post:
      tags:
      - series
      summary: create a series 
      description: series entry
      operationId: createSeries
      parameters:
      - name: seriesName
        in: path
        description: seriesName of the user
        required: true
        schema:
          type: string
      requestBody:
        description: Creates a series
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/series_master'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/updateSeries:
    put:
      tags:
      - series
      summary: update a series
      operationId: updateSeries
      parameters:
      - name: seriesId
        in: path
        description: seriesName of the user
        required: true
        schema:
          type: string
      requestBody:
        description: updates a series
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/series_master_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/listAllSeries{entityId}:
    get:
      tags:
      - series
      summary: create a list of series
      operationId: listAllSeries
      parameters:
      - name: entityId
        in: path
        description: entityId of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success   
  /Entity/listAllSeriesById{Id}:
    get:
      tags:
      - series
      summary: list series by Id
      operationId: listAllRulesById
      parameters:
      - name: Id
        in: path
        description: Id of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid Id supplied

  /Entity/createServiceType:
    post:
      tags:
      - servicetype
      summary: create a servicetype 
      description: service type entry
      operationId: createServiceType
      parameters:
      - name: serviceTypeName
        in: path
        description: Id of the user
        required: true
        schema:
          type: string
      - name: shortName
        in: path
        description: Id of the user
        required: true
        schema:
          type: string
      requestBody:
        description: Creates a servicetype
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/service_type_register'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/updateServiceType:
    put:
      tags:
      - servicetype
      summary: update a service type
      operationId: updateServiceType
      parameters:
      - name: id
        in: path
        description: Id of the user
        required: true
        schema:
          type: string
      requestBody:
        description: updates a series
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/service_type_register_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/listAllServiceTypes/{entityId}:
    get:
      tags:
      - servicetype
      summary: create a list of servicetypes
      operationId: listAllServiceTypes
      parameters:
      - name: entityId
        in: path
        description: entityId of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success   
  /Entity/listServiceTypeById{Id}:
    get:
      tags:
      - servicetype
      summary: list servicetype by Id
      operationId: listSeriesById
      parameters:
      - name: Id
        in: path
        description: Id of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid Id supplied
  /Entity/createTax:
    post:
      tags:
      - tax
      summary: create a tax 
      description: tax entry
      operationId: createTax
      parameters:
      - name: taxName
        in: path
        required: true
        schema:
          type: string
      - name: taxValue
        in: path
        required: true
        schema:
          type: number
          format: float
      - name: salesTaxType
        in: path
        required: true
        schema:
          type: string
      - name: salesSgst
        in: path
        required: true
        schema:
          type: number
          format: float
      - name: salesCgst
        in: path
        required: true
        schema:
          type: number
          format: float
      - name: salesIgst
        in: path
        required: true
        schema:
          type: number
          format: float
      - name: purchaseTaxType
        in: path
        required: true
        schema:
          type: string
          format: varchar
      - name: purchaseSgst
        in: path
        required: true
        schema:
          type: string
      - name: purchaseCgst
        in: path
        required: true
        schema:
          type: string
      - name: purchaseIgst
        in: path
        required: true
        schema:
          type: string
      - name: gstOnMRPSales
        in: path
        required: true
        schema:
          type: string
      - name: gst_on_scheme_value_sales
        in: path
        required: true
        schema:
          type: string
      - name: gst_on_mrp_pur
        in: path
        required: true
        schema:
          type: string
      - name: gst_on_scheme_value_pur
        in: path
        required: true
        schema:
          type: string
      - name: gst_discount_sales
        in: path
        required: true
        schema:
          type: string
      - name: gst_discount_pur
        in: path
        required: true
        schema:
          type: string
      - name: saleStatus
        in: path
        required: true
        schema:
          type: string
      - name: purStatus
        in: path
        required: true
        schema:
          type: string
      - name: taxDescription
        in: path
        required: true
        schema:
          type: string
      - name: syncStatus
        in: path
        required: true
        schema:
          type: string
      - name: entityTypeId
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: string
      - name: createdUser
        in: path
        required: true
        schema:
          type: string
      - name: modifiedUser
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/tax_register'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'
  /Entity/updateTax/{Id}:
    put:
      tags:
      - tax
      summary: update a tax
      operationId: updateTax
      parameters:
      - name: Id
        in: path
        description: Id of the user
        required: true
        schema:
          type: string
      requestBody:
        description: updates a tax
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/tax_register_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'
  /Entity/listAllTax/{entityId}:
    get:
      tags:
      - tax
      summary: create a list of tax
      operationId: listAllTax
      parameters:
      - name: entityId
        in: path
        description: entityId of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success   
  /Entity/listTaxById/{Id}:
    get:
      tags:
      - tax
      summary: list tax by Id
      operationId: listTaxById
      parameters:
      - name: Id
        in: path
        description: Id of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid Id supplied
  /Entity/createTermsAndConditions:
    post:
      tags:
      - terms and conditions
      summary: create terms and conditions
      description: terms and conditions
      operationId: createTax
      parameters:
      - name: formId
        in: path
        description: entityId of the user
        required: true
        schema:
          type: string
      requestBody:
        description: Creates terms
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/terms_conditions_details'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/updateTermsAndConditions/{Id}:
    put:
      tags:
      - terms and conditions
      summary: update terms and conditions
      operationId: updateTermsAndConditions
      parameters:
      - name: Id
        in: path
        description: entityId of the user
        required: true
        schema:
          type: string
      requestBody:
        description: update terms
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/terms_conditions_details_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/listAllTermsAndConditions/{entityId}:
    get:
      tags:
      - terms and conditions
      summary: create a list of terms and conditions
      operationId: listAllTermsAndConditions
      parameters:
      - name: entityId
        in: path
        description: entityId of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success   
  /Entity/listTermsAndConditionsById/{Id}:
    get:
      tags:
      - terms and conditions
      summary: list terms and conditions by Id
      operationId: listTermsAndConditionsById
      parameters:
      - name: Id
        in: path
        description: Id of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid Id supplied
  /Entity/createTerritory:
    post:
      tags:
      - territory
      summary: create territory
      description: territory
      operationId: createTerritory
      requestBody:
        description: Creates territories
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/territory_register'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'
  /Entity/updateTerritory:
    put:
      tags:
      - territory
      summary: update territories
      operationId: updateTerritory
      requestBody:
        description: update territories
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/territory_register_update'
        required: true
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
             $ref: '#/components/schemas/ApiResponse'

  /Entity/listAllTerritories:
    get:
      tags:
      - territory
      summary: create a list of terms and conditions
      operationId: listAllTerritories
      parameters:
      - name: entityId
        in: path
        description: entityId of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: success   
  /Entity/listTerritoriesById/{Id}:
    get:
      tags:
      - territory
      summary: list territory by Id
      operationId: listTerritoriesById
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
        400:
          description: Invalid Id supplied
components:
  schemas:
    entity:
      type: object
      properties:
        entityName:
          type: string
        entityTypeId:
          type: integer
        entityId:
          type: integer
        affiliateId:
          type: integer
        addressLine1:
          type: string
        addressLine2:
          type: string
        countryId:
          type: integer
        stateId:
          type: integer
        cityId:
          type: integer
        pinCode:
          type: string
        phonenumber:
          type: string
        mobileNumber:
          type: string
        email:
          type: string
        contactName:
          type: string
        priorityId:
          type: integer
        pan:
          type: string
        gstn:
          type: string
        urdNumber:
          type: string
        corpId:
          type: string
        drugLicence_1:
          type: string
        drugLicence_2:
          type: string
        drugLicenceValidity:
          type: string
        foodLicence_1:
          type: string
        foodLicenceValidity:
          type: string
        salesBalanceLimit:
          type: number
          format: float
        noOfCrDays:
          type: integer
        noOfGraceDays:
          type: integer
        calculateOn:
          type: string
        bankId:
          type: integer
        accountNo:
          type: string
        upiId:
          type: string
        openingBalance:
          type: number
          format: float
        currentBalance:
          type: number
          format: float
        discount:
          type: number
          format: float
        bankCommission:
          type: number
          format: float
        transportTypeId:
          type: integer
        defaultCharge:
          type: number
          format: float
        caretaker:
          type: integer
        contact:
          type: string
        terms:
          type: string
        salesmanId:
          type: integer
        managerId:
          type: integer
          format: int64
        sales_commission:
          type: number
          format: float
        routeId:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int64
        aadharId:
          type: string
        companyCode:
          type: string
        faxNumber:
          type: string
        repName:
          type: string
        repPhoneNumber:
          type: string
        password:
          type: string
        zoneId:
          type: integer
          format: int64
        contactDob:
          type: string
        status:
          type: integer
          format: int32
      xml:
        name: Entity
    user:
      type: object
      properties:
        userName:
          type: string
        mobileNumber:
          type: string
        contactNumber:
          type: string
        aadharId:
          type: string
        reportTo:
          type: integer
          format: int64
        email:
          type: string
        genderId:
          type: integer
          format: int64
        photo:
          type: string
        nationality:
          type: string
        address:
          type: string
        countryId:
          type: integer
          format: int64
        stateId:
          type: integer
          format: int64
        cityId:
          type: integer
          format: int64
        referredBy:
          type: integer
          format: int64
        referenceRelation:
          type: string
        pincode:
          type: string
        joiningDate:
          type: string
          format: date
        password:
          type: string
        departmentId:
          type: integer
          format: int64
        permissions:
          type: string
        dob:
          type: string
          format: date
        status:
          type: string
        syncStatus:
          type: integer
        anniversary_date:
          type: string
          format: date
        lastLoginDate:
          type: string
          format: date
        approvedSalary:
          type: number
          format: float
        designationSalary:
          type: number
          format: float
        lastPaidDate:
          type: string
          format: date
        paymentModeId:
          type: integer
          format: int64
        bankAccount:
          type: string
        bankId:
          type: integer
          format: int64
        assignedHolidays:
          type: string
        specialization:
          type: string
        licenceNumber:
          type: string
        accountId:
          type: integer
          format: int64
        zoneId:
          type: integer
          format: int64
        divisionId:
          type: integer
          format: int64
        roleId:
          type: integer
          format: int64
      xml:
        name: User
    role:
      type: object
      properties:
        roleName:
          type: string
        description:
          type: string
      xml:
        name: Role
    entity_update:
      type: object
      properties:
        Id:
         type: integer
        entityName:
          type: string
        affiliate:
          type: integer
          format: int32
        addressLine1:
          type: string
        addressLine2:
          type: string
        countryId:
          type: integer
          format: int32
        stateId:
          type: integer
          format: int32
        cityId:
          type: integer
          format: int32
        pinCode:
          type: string
        phonenumber:
          type: string
        mobileNumber:
          type: string
        email:
          type: string
        contactName:
          type: string
        priorityId:
          type: integer
          format: int32
        pan:
          type: string
        gstn:
          type: string
        urdNumber:
          type: string
        corpId:
          type: string
        drugLicence_1:
          type: string
        drugLicence_2:
          type: string
        drugLicenceValidity:
          type: string
        foodLicence_1:
          type: string
        foodLicenceValidity:
          type: string
        salesBalanceLimit:
          type: number
          format: float
        noOfCrDays:
          type: integer
          format: int32
        noOfGraceDays:
          type: integer
          format: int32
        calculateOn:
          type: string
        bankId:
          type: integer
          format: int32
        accountNo:
          type: string
        upiId:
          type: string
        openingBalance:
          type: number
          format: float
        currentBalance:
          type: number
          format: float
        discount:
          type: number
          format: float
        bankCommission:
          type: number
          format: float
        transportTypeId:
          type: integer
          format: int32
        defaultCharge:
          type: number
          format: float
        caretaker:
          type: integer
          format: int32
        contact:
          type: string
        terms:
          type: string
        salesmanId:
          type: integer
          format: int64
        managerId:
          type: integer
          format: int64
        sales_commission:
          type: number
          format: float
        routeId:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int64
        aadharId:
          type: string
        companyCode:
          type: string
        faxNumber:
          type: string
        repName:
          type: string
        repPhoneNumber:
          type: string
        password:
          type: string
        zoneId:
          type: integer
          format: int64
        contactDob:
          type: string
        status:
          type: integer
          format: int32
      xml:
        name: Entity
    user_update:
      type: object
      properties:
        userId:
         type: integer
        userName:
          type: string
        mobileNumber:
          type: string
        contactNumber:
          type: string
        aadharId:
          type: string
        reportTo:
          type: integer
          format: int64
        email:
          type: string
        genderId:
          type: integer
          format: int64
        photo:
          type: string
        nationality:
          type: string
        address:
          type: string
        countryId:
          type: integer
          format: int64
        stateId:
          type: integer
          format: int64
        cityId:
          type: integer
          format: int64
        referredBy:
          type: integer
          format: int64
        referenceRelation:
          type: string
        pincode:
          type: string
        joiningDate:
          type: string
          format: date
        password:
          type: string
        departmentId:
          type: integer
          format: int64
        permissions:
          type: string
        dob:
          type: string
          format: date
        status:
          type: string
        syncStatus:
          type: integer
        anniversary_date:
          type: string
          format: date
        lastLoginDate:
          type: string
          format: date
        approvedSalary:
          type: number
          format: float
        designationSalary:
          type: number
          format: float
        lastPaidDate:
          type: string
          format: date
        paymentModeId:
          type: integer
          format: int64
        bankAccount:
          type: string
        bankId:
          type: integer
          format: int64
        assignedHolidays:
          type: string
        specialization:
          type: string
        licenceNumber:
          type: string
        accountId:
          type: integer
          format: int64
        zoneId:
          type: integer
          format: int64
        divisionId:
          type: integer
          format: int64
        roleId:
          type: integer
          format: int64
      xml:
        name: User
    role_update:
      type: object
      properties:
        roleId:
          type: integer
          format: int64
        roleName:
          type: string
        description:
          type: string
      xml:
        name: Role
    route_register:
        type: object
        properties:
          routeName:
            type: string
          cityId:
            type: integer
            format: int64
          stateId:
            type: integer
            format: int64
          countryId:
            type: integer
            format: int64
          areaManager:
            type: integer
            format: int64
          salesman:
            type: integer
            format: int64
          ccmEnabled:
            type: string
          daysOfWeek:
            type: string
          ccmId:
            type: string
          apprExpense:
            type: number
            format: float
          status:
           type: integer
           format: int32
    route_register_update:
        type: object
        properties:
          routeId:
            type: integer
          routeName:
            type: string
          cityId:
            type: integer
            format: int64
          stateId:
            type: integer
            format: int64
          countryId:
            type: integer
            format: int64
          areaManager:
            type: integer
            format: int64
          salesman:
            type: integer
            format: int64
          ccmEnabled:
            type: string
          daysOfWeek:
            type: string
          ccmId:
            type: string
          apprExpense:
            type: number
            format: float
          status:
           type: integer
           format: int32
    customer_group_register:
        type: object
        properties:
          customerGroupName:
            type: string
            format: varchar45
          shortName:
           type: string
           format: varchar45
    customer_group_register_update:
        type: object
        properties:
          Id:
            type: integer
          customerGroupName:
            type: string
            format: varchar45
          shortName:
           type: string
           format: varchar45
    day_end_master:
        type: object
        properties:
          date: 
           type: string
           format: date
          status:
           type: string
           format: varchar
    day_end_master_update:
        type: object
        properties:
          dayEndId:  
           type: integer 
          date: 
           type: string
           format: date
          status:
           type: string
           format: varchar
    financial_year_master:
         type: object
         properties:
          financialYearName: 
           type: string
           format: varchar
          shortName: 
           type: string
           format: varchar
          startDate:
           type: string
           format: date
          endDate:
           type: string
           format: date
          status:
           type: integer
    financial_year_master_update:
         type: object
         properties:
          financialYearId:
           type: integer
          financialYearName: 
           type: string
           format: varchar
          shortName: 
           type: string
           format: varchar
          startDate:
           type: string
           format: date
          endDate:
           type: string
           format: date
          status:
           type: integer
    region_register:
         type: object
         properties:
          regionName:
           type: string
           format: varchar
          shortName:
            type: string
            format: varchar
          regionStateIds:
           type: string
           format: longtext
          countryId:
           type: integer
           format: bigint
    region_register_update:
         type: object
         properties:
          id:
            type: integer
          regionName:
           type: string
           format: varchar
          shortName:
            type: string
            format: varchar
          regionStateIds:
           type: string
           format: longtext
          countryId:
           type: integer
           format: bigint
    rule_master:
         type: object
         properties:
          dlExpired: 
           type: integer
          foodLicenseExpired:
           type: integer
          salesValueLimit:
           type: integer
          creditGraceCheck:
           type: integer
          checkDate:
           type: string
           format: date
          scheme:
           type: integer
    rule_master_update:
         type: object
         properties:
          ruleId:
            type: integer 
          dlExpired: 
           type: integer
          foodLicenseExpired:
           type: integer
          salesValueLimit:
           type: integer
          creditGraceCheck:
           type: integer
          checkDate:
           type: string
           format: date
          scheme:
           type: integer
    series_master:
         type: object
         properties:
          seriesCode:
           type: string
           format: varchar
          seriesName:
           type: string
           format: varchar
          mode:
           type: integer
          saleId:
           type: integer
          returnId:
           type: integer
          orderId:
           type: integer
          status:
           type: integer
    series_master_update:
         type: object
         properties:
          seriesId:
           type: integer
          seriesCode:
           type: string
           format: varchar
          seriesName:
           type: string
           format: varchar
          mode:
           type: integer
          saleId:
           type: integer
          returnId:
           type: integer
          orderId:
           type: integer
          status:
           type: integer
    service_type_register:
         type: object
         properties:
          serviceTypeName:
           type: string
           format: varchar
          shortName:
           type: string
           format: varchar
    service_type_register_update:
         type: object
         properties:
          id:
           type: integer
          serviceTypeName:
           type: string
           format: varchar
          shortName:
           type: string
           format: varchar
    tax_register:
         type: object
         properties:
          taxName:
           type: integer
          taxValue:
           type: number
           format: float
          salesTaxType: 
           type: integer
           format: float
          salesSgst: 
           type: integer
           format: float
          salesCgst:
           type: integer
          salesIgst:
           type: integer
           format: float
          purchaseTaxType:
           type: string
           format: varchar
          purchaseSgst:
           type: integer
           format: float
          purchaseCgst:
           type: integer
           format: float
          purchaseIgst:
           type: integer
           format: float
          gstOnMRPSales:
           type: string
           format: varchar
          gst_on_scheme_value_sales:
           type: string
           format: varchar
          gst_on_mrp_pur:
           type: string
           format: varchar
          gst_on_scheme_value_pur:
            type: string
            format: varchar
          gst_discount_sales:
            type: string
            format: varchar
          gst_discount_pur:
            type: string
            format: varchar
          sale_status:
            type: string
            format: varchar
          pur_status:
            type: string
            format: varchar
          tax_description:
            type: string
            format: longtext
    tax_register_update:
         type: object
         properties:
          taxId:
           type: integer
          taxName:
           type: integer
          taxValue:
           type: number
           format: float
          salesTaxType: 
           type: integer
           format: float
          salesSgst: 
           type: integer
           format: float
          salesCgst:
           type: integer
          salesIgst:
           type: integer
           format: float
          purchaseTaxType:
           type: string
           format: varchar
          purchaseSgst:
           type: integer
           format: float
          purchaseCgst:
           type: integer
           format: float
          purchaseIgst:
           type: integer
           format: float
          gstOnMRPSales:
           type: string
           format: varchar
          gst_on_scheme_value_sales:
           type: string
           format: varchar
          gst_on_mrp_pur:
           type: string
           format: varchar
          gst_on_scheme_value_pur:
            type: string
            format: varchar
          gst_discount_sales:
            type: string
            format: varchar
          gst_discount_pur:
            type: string
            format: varchar
          sale_status:
            type: string
            format: varchar
          pur_status:
            type: string
            format: varchar
          tax_description:
            type: string
            format: longtext
    terms_conditions_details:
         type: object
         properties:
          formId:
            type: integer
            format: bigint
          termCondition:
           type: string
           format: longtext
          status:
           type: integer
    terms_conditions_details_update:
         type: object
         properties:
          termId:
           type: integer
           format: bigint
          formId:
            type: integer
            format: bigint
          termCondition:
           type: string
           format: longtext
          status:
           type: integer
    territory_register:
         type: object
         properties:
          territoryName:
           type: string
           format: varchar
          shortName:
            type: string
            format: varchar
          territoryHq:
           type: integer
           format: bigint
          cityIds:
           type: string
           format: longtext
          stateIds:
           type: string
           format: longtext
          countryId:
           type: integer
           format: bigint
    territory_register_update:
         type: object
         properties:
          id:
           type: integer
          territoryName:
           type: string
           format: varchar
          shortName:
            type: string
            format: varchar
          territoryHq:
           type: integer
           format: bigint
          cityIds:
           type: string
           format: longtext
          stateIds:
           type: string
           format: longtext
          countryId:
           type: integer
           format: bigint
    ApiResponse:
      type: array
      items:
        properties:
          status:
            type: string
          affectedRows:
            type: integer
            example: 1
          insertId:
            type: integer
            example: 1

   